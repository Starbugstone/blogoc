{% extends "Admin/Base.twig" %}
{% block main %}
    <h1>Category List</h1>
    <div class="row">
        <div class="col">
            Name
        </div>
        <div class="col">
            Slug
        </div>
        <div class="col">
            Links
        </div>
    </div>
    {% for category in categories %}
        <form action="/admin/category/update" method="post" onsubmit="ajaxSave(event, this)">
            <div class="row mt-3">
                <div class="col">
                    <input type="hidden" value="{{ category.idcategories }}" name="idcategories">
                    <input type="text" value="{{ category.category_name }}" name="category_name"
                           class="w-100 categoryNameInput" onkeyup="slugify(this)">
                </div>
                <div class="col">
                    <input type="text" value="{{ category.categories_slug }}" name="categories_slug" class="w-100">
                </div>
                <div class="col">
                    <a href="/category/posts/{{ category.categories_slug }}" class="btn btn-success"><i
                                class="fa fa-eye" aria-hidden="true"></i></a>
                    <button type="submit" class="btn btn-warning"><i class="fa fa-floppy-o" aria-hidden="true"></i>
                    </button>
                    <a href="/admin/category/delete/{{ category.idcategories }}" class="btn btn-danger"><i
                                class="fa fa-trash" aria-hidden="true" onclick="ajaxDelete(event, this)"></i></a>
                </div>
            </div>
        </form>
    {% endfor %}
    <button class="btn btn-success" id="addNewCategory"><i class="fa fa-plus-circle" aria-hidden="true"></i> Add new
        category
    </button>



    {% include "Includes/Pagination.twig" with {'pagination': pagination, 'pageUrl' :'/admin/category/list', paginationPostsPerPage: paginationPostsPerPage} %}

{% endblock %}

{% block js %}
    <script>
        setupAjax();

        //slugify
        var $slugRequest = null;

        function slugify($this) {
            if ($slugRequest !== null) {
                $slugRequest.abort();
            }
            let $that = jQuery($this);
            let $slugInput = $that.parent("div").next("div").children("input").first();
            $slugRequest = $.ajax({
                url: "/ajax/ajaxSlugify/slugify-string",
                data: {'slugText-update': $that.val()}
            }).done(function ($result) {
                //set the resluting slug and trigger change to see if unique
                $slugInput.val($result.slug);
            });
        }

        //Add a new category
        $("#addNewCategory").click(function () {
            $htmlForm = "<form action=\"/admin/category/new\" method=\"post\" onsubmit=\"ajaxNew(event, this)\">\n" +
                "            <div class=\"row mt-3\">\n" +
                "                <div class=\"col\">\n" +
                "                    <input type=\"text\" name=\"category_name\" class=\"w-100 categoryNameInput\" onkeyup=\"slugify(this)\">\n" +
                "                </div>\n" +
                "                <div class=\"col\">\n" +
                "                    <input type=\"text\" name=\"categories_slug\" class=\"w-100\">\n" +
                "                </div>\n" +
                "                <div class=\"col\">\n" +
                "                    <button type=\"submit\" class=\"btn btn-warning\"><i class=\"fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n" +
                "                </div>\n" +
                "            </div>\n" +
                "        </form>";
            $(this).before($htmlForm);
        });

        //Ajax new call
        function ajaxNew($e, $this){
            var $that = jQuery($this);
            $e.preventDefault();
            $e.stopPropagation();
            var $data_json = JSON.stringify($that.serializeArray());
            $.ajax({
                url: "/ajax/category/new",
                data: {'category-new': $data_json},
            }).done(function ($result) {
                setupToastr();
                if ($result['success']) {
                    toastr.success('New category created');
                    $that.find("button>i").first().after("<i class=\"fa fa-check\" aria-hidden=\"true\"></i>");
                } else {
                    toastr.Warning('Category creation has errors');
                    $that.find("button>i").first().after("<i class=\"fa fa-cross\" aria-hidden=\"true\"></i>");
                }
            });
        }

        //Ajax save call
        function ajaxSave($e, $this) {
            var $that = jQuery($this);
            $e.preventDefault();
            $e.stopPropagation();
            var $data_json = JSON.stringify($that.serializeArray());
            $.ajax({
                url: "/ajax/category/update",
                data: {'category-update': $data_json},
            }).done(function ($result) {
                setupToastr();
                if ($result['success']) {
                    toastr.success('update Ok');
                    $that.find("button>i").first().after("<i class=\"fa fa-check\" aria-hidden=\"true\"></i>");
                } else {
                    toastr.Warning('Update has errors');
                    $that.find("button>i").first().after("<i class=\"fa fa-cross\" aria-hidden=\"true\"></i>");
                }
            });
        }

        //Ajax delete call
        function ajaxDelete($e, $this)
        {
            $e.preventDefault();
            $e.stopPropagation();
            var $that = jQuery($this).parents("form").first();
            var $data_json = JSON.stringify($that.serializeArray());
            console.log($data_json);
            $.ajax({
                url: "/ajax/category/delete",
                data: {'category-delete': $data_json},
            }).done(function ($result) {
                setupToastr();
                if ($result['success']) {
                    toastr.success('Delete Ok');
                    $that.remove();
                } else {
                    toastr.Warning('Error deleting');
                }
            });
        }
    </script>
{% endblock %}